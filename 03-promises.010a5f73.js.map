{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,IAAIC,EACAC,EACAC,EAEAC,EA0BJ,SAASC,EAAcC,EAAUC,GAajC,OAXkB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEvCC,YAAW,KACNH,EACJF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAEvBA,EAAM,G,CA5CDU,SAASC,cAAc,QAE/BC,iBAAiB,UAOtB,WACEC,MAAMC,iBAEHnB,EAAQoB,OAAOF,MAAMG,OAAO,GAAGC,OAC/BrB,EAAYmB,OAAOF,MAAMG,OAAO,GAAGC,OACnCvB,EAASqB,OAAOF,MAAMG,OAAO,GAAGC,OAEnC,IAAK,IAAIC,EAAG,EAAGA,GAAKxB,EAAQwB,GAAI,EAC5BrB,EAAWqB,EAEXpB,EAAcD,EAAUF,GACvBwB,MAAK,EAAGX,SAAAY,EAAUX,MAAAY,MACjBC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAGzEI,OAAM,EAAGjB,SAAAkB,EAAUjB,MAAAkB,MAClBL,EAAA9B,GAAS+B,OAAOK,QAAQ,sBAAoBF,QAAiBC,MAAU,IAGzEhC,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('form')\n\nform.addEventListener('submit', onSubmit)\nlet amount\nlet delay\nlet delayStep \n\nlet position\n\nfunction onSubmit() {\n  event.preventDefault()\n  \n     delay = Number(event.target[0].value)\n     delayStep = Number(event.target[1].value)\n     amount = Number(event.target[2].value)\n \n  for (let i= 1; i <= amount; i +=1) {\n      position = i\n      \n      createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }); \n      delay += delayStep\n  }\n}\n\n\nfunction createPromise(position, delay) {\n \n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  \n   setTimeout(() => { \n    if (shouldResolve) {\n    resolve({ position, delay });\n  } else {\n    reject({ position, delay });\n  }\n     }, delay)\n  })\nreturn promise\n};\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","document","querySelector","addEventListener","event","preventDefault","Number","target","value","i","then","position1","delay1","$parcel$interopDefault","Notify","success","catch","position2","delay2","failure"],"version":3,"file":"03-promises.010a5f73.js.map"}